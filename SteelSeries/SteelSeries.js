define(["jquery", "./properties", "./initialproperties", "./steelseries-min", "./tween-min"], function ($, props, initProps) {
    'use strict';

    // ---------------------------------------------------------------------------------------
    // Util Functions
    // ---------------------------------------------------------------------------------------

    /**
    * Check if the string is empty or not.
    * @param {string} the string to be checked.
    */
    function isEmpty(str) {
        return typeof str == 'string' && !str.trim() || typeof str == 'undefined' || str === null;
    }

    // ---------------------------------------------------------------------------------------
    // Create Element Function
    // ---------------------------------------------------------------------------------------

    /**
    * Function used to render the gauge element.
    * @param {$element} element automatic generated by qlik
    * @param {layout} layout automatic generated by qlik.
    */
    function render($element, layout) {

        //-----------------------------------------------------------------
        // VARIABLES
        //-----------------------------------------------------------------

        // Create the gauge ID for this control
        var SteelSeries_id = 'SteelSeries_' + layout.qInfo.qId;

        // Clear all the element
        $element.empty();

        // Check data
        if (layout.qHyperCube.qDataPages[0].qMatrix.length) {

            $.each(layout.qHyperCube.qDataPages[0].qMatrix, function (key, row) {

                var SteelSeriesValue = row[0].qNum;

                //-----------------------------------------------------------------
                // RENDERING CODE START
                //-----------------------------------------------------------------

                // Check if Canvas element exist
                if (document.getElementById(SteelSeries_id)) {
                    $("#" + SteelSeries_id).empty();
                } else {
                    $element.append($('<canvas />').attr('id', SteelSeries_id));
                }

                //-----------------------------------------------------------------
                // SECTIONS
                //-----------------------------------------------------------------

                var gaugeSections = [];
                var sectionN;

                if (layout.numberSection !== 0) {
                    for (sectionN = 1; sectionN <= layout.numberSection; sectionN += 1) {
                        if (eval('layout.valueSection' + sectionN) !== '') {
                            gaugeSections.push(eval("steelseries.Section(" + eval('layout.valueSection' + sectionN) + ")"));
                        }
                    }
                }

                //-----------------------------------------------------------------
                // AREAS
                //-----------------------------------------------------------------

                var gaugeAreas = [];
                var areaN;

                if (layout.numberArea !== 0) {
                    for (areaN = 1; areaN <= layout.numberArea; areaN += 1) {
                        if (eval('layout.valueSection' + areaN) !== '') {
                            gaugeAreas.push(eval("steelseries.Section(" + eval('layout.valueSection' + areaN) + ")"));
                        }
                    }
                }

                //-----------------------------------------------------------------
                // SteelSeries CONFIG
                //-----------------------------------------------------------------

                var gaugeParams;

                var SteelSeriesConfigStr = '{';
                SteelSeriesConfigStr += '"size": ' + $element.height() + ' ';
                SteelSeriesConfigStr += '}';

                var SteelSeriesConfig = $.parseJSON(SteelSeriesConfigStr);


                //-----------------------------------------------------------------
                // SteelSeries DRAW GAUGE & SET VALUE
                //-----------------------------------------------------------------
                var gauge;

                switch (layout.gaugeStyle) {

//===================================================================================================
//  radial
//===================================================================================================
                case 'radial':

                    // create the params for the gauge
                    gaugeParams = {
                        gaugeType: ((layout.gaugeType === 'TYPE1') ? steelseries.GaugeType.TYPE1
                            : (layout.gaugeType === 'TYPE2') ? steelseries.GaugeType.TYPE2
                            : (layout.gaugeType === 'TYPE3') ? steelseries.GaugeType.TYPE3
                            : steelseries.GaugeType.TYPE4),
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        section: (((undefined === layout.numberSection) || (layout.numberSection === 0))? null : gaugeSections),
                        area: (((undefined === layout.numberArea) || (layout.numberArea === 0))? null : gaugeAreas),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        pointerType: ((layout.pointerType === 'TYPE1') ? steelseries.PointerType.TYPE1
                            : (layout.pointerType === 'TYPE2') ? steelseries.PointerType.TYPE2
                            : (layout.pointerType === 'TYPE3') ? steelseries.PointerType.TYPE3
                            : (layout.pointerType === 'TYPE4') ? steelseries.PointerType.TYPE4
                            : (layout.pointerType === 'TYPE5') ? steelseries.PointerType.TYPE5
                            : (layout.pointerType === 'TYPE6') ? steelseries.PointerType.TYPE6
                            : (layout.pointerType === 'TYPE7') ? steelseries.PointerType.TYPE7
                            : (layout.pointerType === 'TYPE8') ? steelseries.PointerType.TYPE8
                            : (layout.pointerType === 'TYPE9') ? steelseries.PointerType.TYPE9
                            : (layout.pointerType === 'TYPE10') ? steelseries.PointerType.TYPE10
                            : (layout.pointerType === 'TYPE11') ? steelseries.PointerType.TYPE11
                            : (layout.pointerType === 'TYPE12') ? steelseries.PointerType.TYPE12
                            : (layout.pointerType === 'TYPE13') ? steelseries.PointerType.TYPE13
                            : (layout.pointerType === 'TYPE14') ? steelseries.PointerType.TYPE14
                            : (layout.pointerType === 'TYPE15') ? steelseries.PointerType.TYPE15
                            : (layout.pointerType === 'TYPE16') ? steelseries.PointerType.TYPE16
                            : steelseries.PointerType.TYPE1),
                        pointerColor: ((layout.pointerColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.pointerColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.pointerColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.pointerColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.pointerColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.pointerColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.pointerColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.pointerColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.pointerColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.pointerColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.pointerColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.pointerColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.pointerColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        knobType: ((layout.knobType === 'STANDARD_KNOB') ? steelseries.KnobType.STANDARD_KNOB
                            : (layout.knobType === 'METAL_KNOB') ? steelseries.KnobType.METAL_KNOB
                            : steelseries.KnobType.STANDARD_KNOB),
                        knobStyle: ((layout.knobStyle === 'SILVER') ? steelseries.KnobStyle.SILVER
                            : (layout.knobStyle === 'BLACK') ? steelseries.KnobStyle.BLACK
                            : (layout.knobStyle === 'BRASS') ? steelseries.KnobStyle.BRASS
                            : steelseries.KnobStyle.SILVER),
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),

/*TODO: */              //digitalFont: (undefined === layout.digitalFont ? false : layout.digitalFont),
/*TODO: */              //fractionalScaleDecimals:  undefined === layout.fractionalScaleDecimals ? 1 : layout.fractionalScaleDecimals),

                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        userLedColor: ((layout.userLedColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.userLedColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.userLedColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.userLedColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.userLedColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.userLedColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.userLedColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.userLedColor.RED_LED),
                        userLedVisible: (undefined === layout.userLedVisible ? false : layout.userLedVisible),
                        minMeasuredValueVisible: (undefined === layout.minMeasuredValueVisible ? false : layout.minMeasuredValueVisible),
                        maxMeasuredValueVisible: (undefined === layout.maxMeasuredValueVisible ? false : layout.maxMeasuredValueVisible),
                        foregroundType: ((layout.foregroundType === 'TYPE1') ? steelseries.ForegroundType.TYPE1
                            : (layout.foregroundType === 'TYPE2') ? steelseries.ForegroundType.TYPE2
                            : (layout.foregroundType === 'TYPE3') ? steelseries.ForegroundType.TYPE3
                            : (layout.foregroundType === 'TYPE4') ? steelseries.ForegroundType.TYPE4
                            : (layout.foregroundType === 'TYPE5') ? steelseries.ForegroundType.TYPE5
                            : steelseries.ForegroundType.TYPE1),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),

/*TODO: */              //labelNumberFormat: ((layout.labelNumberFormat === 'STANDARD') ? steelseries.LabelNumberFormat.STANDARD
                            // : (layout.labelNumberFormat === 'FRACTIONAL') ? steelseries.labelNumberFormat.FRACTIONAL
                            // : (layout.labelNumberFormat === 'SCIENTIFIC') ? steelseries.labelNumberFormat.SCIENTIFIC
                            // : steelseries.LabelNumberFormat.STANDARD),
/*TODO: */              //playAlarm: (undefined === layout.playAlarm ? false : layout.playAlarm),
/*TODO: */              //alarmSound: (undefined === layout.alarmSound ? false : layout.alarmSound),
/*TODO: */              //customLayer: (undefined === layout.customLayer ? null : layout.customLayer),
/*TODO: */              //tickLabelOrientation: (undefined === layout.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : layout.tickLabelOrientation),
/*HIDE */               //trendVisible: (undefined === layout.trendVisible ? false : layout.trendVisible),
/*TODO: */              //trendColors: (undefined === layout.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : layout.trendColors),
/*TODO: */              //useOdometer: (undefined === layout.useOdometer ? false : layout.useOdometer),
/*TODO: */              //odometerParams: (undefined === layout.odometerParams ? {} : layout.odometerParams),
/*TODO: */              //odometerUseValue: (undefined === layout.odometerUseValue ? false : layout.odometerUseValue),
/*TODO: */              //fullScaleDeflectionTime: (undefined === layout.fullScaleDeflectionTime ? 2.5 : layout.fullScaleDeflectionTime),

                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.Radial(SteelSeries_id, gaugeParams);
                    gauge.setValueAnimated(SteelSeriesValue);
                    break;

//===================================================================================================
//  radialBargraph
//===================================================================================================
                case 'radialBargraph':

                    // create the params for the gauge
                    gaugeParams = {
                        gaugeType: ((layout.gaugeType === 'TYPE1') ? steelseries.GaugeType.TYPE1
                            : (layout.gaugeType === 'TYPE2') ? steelseries.GaugeType.TYPE2
                            : (layout.gaugeType === 'TYPE3') ? steelseries.GaugeType.TYPE3
                            : steelseries.GaugeType.TYPE4),
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        section: (((undefined === layout.numberSection) || (layout.numberSection === 0))? null : gaugeSections),
                        useSectionColors: (undefined === layout.useSectionColors ? false : layout.useSectionColors),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        valueColor: ((layout.valueColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.valueColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.valueColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.valueColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.valueColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.valueColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.valueColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.valueColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.valueColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.valueColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.valueColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.valueColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.valueColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),

/*TODO: */              //digitalFont:  (undefined === parameters.digitalFont ? false : parameters.digitalFont),
/*TODO: */              //fractionalScaleDecimals:  (undefined === parameters.fractionalScaleDecimals ? 1 : parameters.fractionalScaleDecimals),
/*TODO: */              //customLayer:  (undefined === parameters.customLayer ? null : parameters.customLayer),

                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        userLedColor: ((layout.userLedColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.userLedColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.userLedColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.userLedColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.userLedColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.userLedColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.userLedColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.userLedColor.RED_LED),
                        userLedVisible: (undefined === layout.userLedVisible ? false : layout.userLedVisible),

/*TODO: */              //labelNumberFormat: ((layout.labelNumberFormat === 'STANDARD') ? steelseries.LabelNumberFormat.STANDARD
                            // : (layout.labelNumberFormat === 'FRACTIONAL') ? steelseries.labelNumberFormat.FRACTIONAL
                            // : (layout.labelNumberFormat === 'SCIENTIFIC') ? steelseries.labelNumberFormat.SCIENTIFIC
                            // : steelseries.LabelNumberFormat.STANDARD),

                        foregroundType: ((layout.foregroundType === 'TYPE1') ? steelseries.ForegroundType.TYPE1
                            : (layout.foregroundType === 'TYPE2') ? steelseries.ForegroundType.TYPE2
                            : (layout.foregroundType === 'TYPE3') ? steelseries.ForegroundType.TYPE3
                            : (layout.foregroundType === 'TYPE4') ? steelseries.ForegroundType.TYPE4
                            : (layout.foregroundType === 'TYPE5') ? steelseries.ForegroundType.TYPE5
                            : steelseries.ForegroundType.TYPE1),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),

/*TODO: */              //playAlarm: (undefined === parameters.playAlarm ? false : parameters.playAlarm),
/*TODO: */              //alarmSound: (undefined === parameters.alarmSound ? false : parameters.alarmSound),
/*TODO: */              //valueGradient: (undefined === parameters.valueGradient ? null : parameters.valueGradient),
/*TODO: */              //useValueGradient: (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),
/*TODO: */              //tickLabelOrientation: (undefined === parameters.tickLabelOrientation ? (gaugeType === steelseries.GaugeType.TYPE1 ? steelseries.TickLabelOrientation.TANGENT : steelseries.TickLabelOrientation.NORMAL) : parameters.tickLabelOrientation),
/*HIDE */               //trendVisible: (undefined === parameters.trendVisible ? false : parameters.trendVisible),
/*TODO: */              //trendColors: (undefined === parameters.trendColors ? [steelseries.LedColor.RED_LED, steelseries.LedColor.GREEN_LED, steelseries.LedColor.CYAN_LED] : parameters.trendColors),
/*TODO: */              //fullScaleDeflectionTime: (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime),

                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.RadialBargraph(SteelSeries_id, gaugeParams);
                    gauge.setValueAnimated(SteelSeriesValue);
                    break;

//===================================================================================================
//  radialVertical
//===================================================================================================
                case 'radialVertical':

                    // create the params for the gauge
                    gaugeParams = {
                        orientation: ((layout.orientation === 'NORTH') ? steelseries.Orientation.NORTH
                            : (layout.orientation === 'WEST') ? steelseries.Orientation.WEST
                            : (layout.orientation === 'EAST') ? steelseries.Orientation.EAST
                            : steelseries.Orientation.NORTH),
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        section: (((undefined === layout.numberSection) || (layout.numberSection === 0))? null : gaugeSections),
                        area: (((undefined === layout.numberArea) || (layout.numberArea === 0))? null : gaugeAreas),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        pointerType: ((layout.pointerType === 'TYPE1') ? steelseries.PointerType.TYPE1
                            : (layout.pointerType === 'TYPE2') ? steelseries.PointerType.TYPE2
                            : (layout.pointerType === 'TYPE3') ? steelseries.PointerType.TYPE3
                            : (layout.pointerType === 'TYPE4') ? steelseries.PointerType.TYPE4
                            : (layout.pointerType === 'TYPE5') ? steelseries.PointerType.TYPE5
                            : (layout.pointerType === 'TYPE6') ? steelseries.PointerType.TYPE6
                            : (layout.pointerType === 'TYPE7') ? steelseries.PointerType.TYPE7
                            : (layout.pointerType === 'TYPE8') ? steelseries.PointerType.TYPE8
                            : (layout.pointerType === 'TYPE9') ? steelseries.PointerType.TYPE9
                            : (layout.pointerType === 'TYPE10') ? steelseries.PointerType.TYPE10
                            : (layout.pointerType === 'TYPE11') ? steelseries.PointerType.TYPE11
                            : (layout.pointerType === 'TYPE12') ? steelseries.PointerType.TYPE12
                            : (layout.pointerType === 'TYPE13') ? steelseries.PointerType.TYPE13
                            : (layout.pointerType === 'TYPE14') ? steelseries.PointerType.TYPE14
                            : (layout.pointerType === 'TYPE15') ? steelseries.PointerType.TYPE15
                            : (layout.pointerType === 'TYPE16') ? steelseries.PointerType.TYPE16
                            : steelseries.PointerType.TYPE1),
                        pointerColor: ((layout.pointerColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.pointerColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.pointerColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.pointerColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.pointerColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.pointerColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.pointerColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.pointerColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.pointerColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.pointerColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.pointerColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.pointerColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.pointerColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        knobType: ((layout.knobType === 'STANDARD_KNOB') ? steelseries.KnobType.STANDARD_KNOB
                            : (layout.knobType === 'METAL_KNOB') ? steelseries.KnobType.METAL_KNOB
                            : steelseries.KnobType.STANDARD_KNOB),
                        knobStyle: ((layout.knobStyle === 'SILVER') ? steelseries.KnobStyle.SILVER
                            : (layout.knobStyle === 'BLACK') ? steelseries.KnobStyle.BLACK
                            : (layout.knobStyle === 'BRASS') ? steelseries.KnobStyle.BRASS
                            : steelseries.KnobStyle.SILVER),
                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        minMeasuredValueVisible: (undefined === layout.minMeasuredValueVisible ? false : layout.minMeasuredValueVisible),
                        maxMeasuredValueVisible: (undefined === layout.maxMeasuredValueVisible ? false : layout.maxMeasuredValueVisible),
                        foregroundType: ((layout.foregroundType === 'TYPE1') ? steelseries.ForegroundType.TYPE1
                            : (layout.foregroundType === 'TYPE2') ? steelseries.ForegroundType.TYPE2
                            : (layout.foregroundType === 'TYPE3') ? steelseries.ForegroundType.TYPE3
                            : (layout.foregroundType === 'TYPE4') ? steelseries.ForegroundType.TYPE4
                            : (layout.foregroundType === 'TYPE5') ? steelseries.ForegroundType.TYPE5
                            : steelseries.ForegroundType.TYPE1),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),

/*TODO: */              //labelNumberFormat: ((layout.labelNumberFormat === 'STANDARD') ? steelseries.LabelNumberFormat.STANDARD
                            // : (layout.labelNumberFormat === 'FRACTIONAL') ? steelseries.labelNumberFormat.FRACTIONAL
                            // : (layout.labelNumberFormat === 'SCIENTIFIC') ? steelseries.labelNumberFormat.SCIENTIFIC
                            // : steelseries.LabelNumberFormat.STANDARD),
/*TODO: */              //playAlarm: (undefined === parameters.playAlarm ? false : parameters.playAlarm),
/*TODO: */              //alarmSound: (undefined === parameters.alarmSound ? false : parameters.alarmSound),
/*TODO: */              //fullScaleDeflectionTime: (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);

                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.RadialVertical(SteelSeries_id, gaugeParams);
                    gauge.setValueAnimated(SteelSeriesValue);
                    break;

//===================================================================================================
//  linear
//===================================================================================================
                case 'linear':

                    // create the params for the gauge
                    gaugeParams = {
                        gaugeType: ((layout.gaugeType === 'TYPE1') ? steelseries.GaugeType.TYPE1
                            : (layout.gaugeType === 'TYPE2') ? steelseries.GaugeType.TYPE2
                            : (layout.gaugeType === 'TYPE3') ? steelseries.GaugeType.TYPE3
                            : steelseries.GaugeType.TYPE4),
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        valueColor: ((layout.valueColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.valueColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.valueColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.valueColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.valueColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.valueColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.valueColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.valueColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.valueColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.valueColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.valueColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.valueColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.valueColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),

/*TODO: */              //digitalFont: (undefined === parameters.digitalFont ? false : parameters.digitalFont),

                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        minMeasuredValueVisible: (undefined === layout.minMeasuredValueVisible ? false : layout.minMeasuredValueVisible),
                        maxMeasuredValueVisible: (undefined === layout.maxMeasuredValueVisible ? false : layout.maxMeasuredValueVisible),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),

/*TODO: */              //labelNumberFormat: ((layout.labelNumberFormat === 'STANDARD') ? steelseries.LabelNumberFormat.STANDARD
                            // : (layout.labelNumberFormat === 'FRACTIONAL') ? steelseries.labelNumberFormat.FRACTIONAL
                            // : (layout.labelNumberFormat === 'SCIENTIFIC') ? steelseries.labelNumberFormat.SCIENTIFIC
                            // : steelseries.LabelNumberFormat.STANDARD),
/*TODO: */              //playAlarm = (undefined === parameters.playAlarm ? false : parameters.playAlarm),
/*TODO: */              //alarmSound = (undefined === parameters.alarmSound ? false : parameters.alarmSound),
/*TODO: */              //fullScaleDeflectionTime = (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime);

                        width: (undefined === $element.width() ? 0 : $element.width()),
                        height: (undefined === $element.height() ? 0 : $element.height())
                    };

                    gauge = new steelseries.Linear(SteelSeries_id, gaugeParams);
                    gauge.setValueAnimated(SteelSeriesValue);
                    break;

//===================================================================================================
//  linearBargraph
//===================================================================================================
                case 'linearBargraph':


                    // create the params for the gauge
                    gaugeParams = {
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        section: (((undefined === layout.numberSection) || (layout.numberSection === 0))? null : gaugeSections),
                        useSectionColors: (undefined === layout.useSectionColors ? false : layout.useSectionColors),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        valueColor: ((layout.valueColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.valueColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.valueColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.valueColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.valueColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.valueColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.valueColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.valueColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.valueColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.valueColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.valueColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.valueColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.valueColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),

/*TODO: */              //digitalFont: (undefined === parameters.digitalFont ? false : parameters.digitalFont),

                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        minMeasuredValueVisible: (undefined === layout.minMeasuredValueVisible ? false : layout.minMeasuredValueVisible),
                        maxMeasuredValueVisible: (undefined === layout.maxMeasuredValueVisible ? false : layout.maxMeasuredValueVisible),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),

/*TODO: */              //playAlarm: (undefined === parameters.playAlarm ? false : parameters.playAlarm),
/*TODO: */              //alarmSound: (undefined === parameters.alarmSound ? false : parameters.alarmSound),
/*TODO: */              //valueGradient: (undefined === parameters.valueGradient ? null : parameters.valueGradient),
/*TODO: */              //useValueGradient: (undefined === parameters.useValueGradient ? false : parameters.useValueGradient),
/*TODO: */              //fullScaleDeflectionTime: (undefined === parameters.fullScaleDeflectionTime ? 2.5 : parameters.fullScaleDeflectionTime),

                        width: (undefined === $element.width() ? 0 : $element.width()),
                        height: (undefined === $element.height() ? 0 : $element.height())
                    };

                    gauge = new steelseries.LinearBargraph(SteelSeries_id, gaugeParams);
                    gauge.setValueAnimated(SteelSeriesValue);
                    break;

//===================================================================================================
//  displaySingle
//===================================================================================================
                case 'displaySingle':

                    // create the params for the gauge
                    gaugeParams = {
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        unitStringVisible: (undefined === layout.unitStringVisible ? false : layout.unitStringVisible),
                        headerString: (undefined === layout.titleString ? '' : layout.titleString),
                        headerStringVisible: (undefined === layout.showgaugetitle ? false : layout.showgaugetitle),

/*TODO: */              //digitalFont: (undefined === layout.digitalFont ? false : layout.digitalFont),

                        valuesNumeric: (undefined === layout.valuesNumeric ? true : layout.valuesNumeric),
                        value: (undefined === SteelSeriesValue ? 0 : SteelSeriesValue),
                        alwaysScroll: (undefined === layout.alwaysScroll ? false : layout.alwaysScroll),
                        autoScroll: (undefined === layout.autoScroll ? false : layout.autoScroll),
                        section: (((undefined === layout.numberSection) || (layout.numberSection === 0))? null : gaugeSections),
                        width: (undefined === $element.width() ? 0 : $element.width()),
                        height: (undefined === $element.height() ? 0 : $element.height())
                    };

                    gauge = new steelseries.DisplaySingle(SteelSeries_id, gaugeParams);

                    if ((undefined === layout.valuesNumeric) || (layout.valuesNumeric)) {
                        gauge.setValue(SteelSeriesValue);
                    } else {
                        gauge.setValue(layout.valueDisplay1);
                    }


                    break;

//===================================================================================================
//  displayMulti
//===================================================================================================
                case 'displayMulti':

                    // create the params for the gauge
                    gaugeParams = {
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        unitStringVisible: (undefined === layout.unitStringVisible ? false : layout.unitStringVisible),
                        headerString: (undefined === layout.titleString ? '' : layout.titleString),
                        headerStringVisible: (undefined === layout.showgaugetitle ? false : layout.showgaugetitle),

/*TODO: */              //detailString: (undefined === parameters.detailString ? '' : parameters.detailString),
/*TODO: */              //detailStringVisible: (undefined === parameters.detailStringVisible ? false : parameters.detailStringVisible),
/*TODO: */              //linkAltValue: (undefined === parameters.linkAltValue ? true : parameters.linkAltValue),
/*TODO: */              //digitalFont: (undefined === parameters.digitalFont ? false : parameters.digitalFont),

                        valuesNumeric: (undefined === layout.valuesNumeric ? true : layout.valuesNumeric),
                        value: (undefined === SteelSeriesValue ? 0 : SteelSeriesValue),

/*TODO: */              //altValue: (undefined === parameters.altValue ? 0 : parameters.altValue);

                        width: (undefined === $element.width() ? 0 : $element.width()),
                        height: (undefined === $element.height() ? 0 : $element.height())
                    };

                    gauge = new steelseries.DisplayMulti(SteelSeries_id, gaugeParams);

                    if ((undefined === layout.valuesNumeric) || (layout.valuesNumeric)) {
                        gauge.setValue(SteelSeriesValue);
                    } else {
                        gauge.setValue(layout.valueDisplay1);
                    }

                    break;

//===================================================================================================
//  level
//===================================================================================================
                case 'level':
                    gauge = new steelseries.Level(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValue(SteelSeriesValue);
                    break;

//===================================================================================================
//  compass
//===================================================================================================
                case 'compass':
                    gauge = new steelseries.Compass(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValueAnimatedLatest(SteelSeriesValue);
                    gauge.setValueAnimatedAverage(SteelSeriesValue);
                    break;

//===================================================================================================
//  windDirection
//===================================================================================================
                case 'windDirection':
                    gauge = new steelseries.WindDirection(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValueAnimatedLatest(SteelSeriesValue);
                    gauge.setValueAnimatedAverage(SteelSeriesValue);
                    break;

//===================================================================================================
//  horizon
//===================================================================================================
                case 'horizon':
                    gauge = new steelseries.Horizon(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValueAnimatedLatest(SteelSeriesValue);
                    gauge.setValueAnimatedAverage(SteelSeriesValue);
                    break;

//===================================================================================================
//  led
//===================================================================================================
                case 'led':

                    // create the params for the gauge
                    gaugeParams = {
                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.Led(SteelSeries_id, gaugeParams);
                    gauge.setValue(SteelSeriesValue);
                    break;

//===================================================================================================
//  clock
//===================================================================================================
                case 'clock':

                    // create the params for the gauge
                    gaugeParams = {
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        pointerType: ((layout.pointerType === 'TYPE1') ? steelseries.PointerType.TYPE1
                            : (layout.pointerType === 'TYPE2') ? steelseries.PointerType.TYPE2
                            : (layout.pointerType === 'TYPE3') ? steelseries.PointerType.TYPE3
                            : (layout.pointerType === 'TYPE4') ? steelseries.PointerType.TYPE4
                            : (layout.pointerType === 'TYPE5') ? steelseries.PointerType.TYPE5
                            : (layout.pointerType === 'TYPE6') ? steelseries.PointerType.TYPE6
                            : (layout.pointerType === 'TYPE7') ? steelseries.PointerType.TYPE7
                            : (layout.pointerType === 'TYPE8') ? steelseries.PointerType.TYPE8
                            : (layout.pointerType === 'TYPE9') ? steelseries.PointerType.TYPE9
                            : (layout.pointerType === 'TYPE10') ? steelseries.PointerType.TYPE10
                            : (layout.pointerType === 'TYPE11') ? steelseries.PointerType.TYPE11
                            : (layout.pointerType === 'TYPE12') ? steelseries.PointerType.TYPE12
                            : (layout.pointerType === 'TYPE13') ? steelseries.PointerType.TYPE13
                            : (layout.pointerType === 'TYPE14') ? steelseries.PointerType.TYPE14
                            : (layout.pointerType === 'TYPE15') ? steelseries.PointerType.TYPE15
                            : (layout.pointerType === 'TYPE16') ? steelseries.PointerType.TYPE16
                            : steelseries.PointerType.TYPE1),
                        pointerColor: ((layout.pointerColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.pointerColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.pointerColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.pointerColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.pointerColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.pointerColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.pointerColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.pointerColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.pointerColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.pointerColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.pointerColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.pointerColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.pointerColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        foregroundType: ((layout.foregroundType === 'TYPE1') ? steelseries.ForegroundType.TYPE1
                            : (layout.foregroundType === 'TYPE2') ? steelseries.ForegroundType.TYPE2
                            : (layout.foregroundType === 'TYPE3') ? steelseries.ForegroundType.TYPE3
                            : (layout.foregroundType === 'TYPE4') ? steelseries.ForegroundType.TYPE4
                            : (layout.foregroundType === 'TYPE5') ? steelseries.ForegroundType.TYPE5
                            : steelseries.ForegroundType.TYPE1),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),
/*TODO: */              //customLayer: (undefined === parameters.customLayer ? null : parameters.customLayer),
/*TODO: */              //isAutomatic: (undefined === parameters.isAutomatic ? true : parameters.isAutomatic),
/*TODO: */              //hour: (undefined === parameters.hour ? 11 : parameters.hour),
/*TODO: */              //minute: (undefined === parameters.minute ? 5 : parameters.minute),
/*TODO: */              //second: (undefined === parameters.second ? 0 : parameters.second),
/*TODO: */              //secondMovesContinuous: (undefined === parameters.secondMovesContinuous ? false : parameters.secondMovesContinuous),
/*TODO: */              //timeZoneOffsetHour: (undefined === parameters.timeZoneOffsetHour ? 0 : parameters.timeZoneOffsetHour),
/*TODO: */              //timeZoneOffsetMinute: (undefined === parameters.timeZoneOffsetMinute ? 0 : parameters.timeZoneOffsetMinute),
                        secondPointerVisible: (undefined === layout.secondPointerVisible ? true : layout.secondPointerVisible),
                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.Clock(SteelSeries_id, gaugeParams);
                    break;

//===================================================================================================
//  battery
//===================================================================================================
                case 'battery':
                    gauge = new steelseries.Battery(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValue(SteelSeriesValue);
                    break;

//===================================================================================================
//  stopwatch
//===================================================================================================
                case 'stopwatch':
                    gauge = new steelseries.StopWatch(SteelSeries_id, SteelSeriesConfig);
                    break;

//===================================================================================================
//  altimeter
//===================================================================================================
                case 'altimeter':
                    gauge = new steelseries.Altimeter(SteelSeries_id, SteelSeriesConfig);
                    gauge.setValue(SteelSeriesValue);
                    break;

//===================================================================================================
//  trafficlight
//===================================================================================================
                case 'trafficlight':
                    gauge = new steelseries.Trafficlight(SteelSeries_id, SteelSeriesConfig);
                    gauge.setOn(true);
                    break;

//===================================================================================================
//  lightbulb
//===================================================================================================
                case 'lightbulb':
                    gauge = new steelseries.Lightbulb(SteelSeries_id, SteelSeriesConfig);
                    gauge.setOn(true);
                    break;

//===================================================================================================
//  odometer
//===================================================================================================
                case 'odometer':

                    // create the params for the gauge
                    gaugeParams = {
/*TODO: */              digits: (undefined === layout.digits ? 6 : layout.digits),
/*TODO: */              //decimals: (undefined === parameters.decimals ? 1 : parameters.decimals),
/*TODO: */              //decimalBackColor: (undefined === parameters.decimalBackColor ? '#F0F0F0' : parameters.decimalBackColor),
/*TODO: */              //decimalForeColoR: (undefined === parameters.decimalForeColor ? '#F01010' : parameters.decimalForeColor),
/*TODO: */              //font: (undefined === parameters.font ? 'sans-serif' : parameters.font),
/*TODO: */              //value: (undefined === parameters.value ? 0 : parameters.value),
/*TODO: */              //valueBackColor: (undefined === parameters.valueBackColor ? '#050505' : parameters.valueBackColor),
/*TODO: */              //valueForeColor: (undefined === parameters.valueForeColor ? '#F8F8F8' : parameters.valueForeColor),
/*TODO: */              //wobbleFactor: (undefined === parameters.wobbleFactor ? 0.07 : parameters.wobbleFactor)
                        height: (undefined === $element.height() ? 0 : $element.height())
                    };


                    gauge = new steelseries.Odometer(SteelSeries_id, gaugeParams);
                    gauge.setValue(SteelSeriesValue);
                    break;

//===================================================================================================
//  radial
//===================================================================================================
                default:

                    // create the params for the gauge
                    gaugeParams = {
                        gaugeType: ((layout.gaugeType === 'TYPE1') ? steelseries.GaugeType.TYPE1
                            : (layout.gaugeType === 'TYPE2') ? steelseries.GaugeType.TYPE2
                            : (layout.gaugeType === 'TYPE3') ? steelseries.GaugeType.TYPE3
                            : steelseries.GaugeType.TYPE4),
                        minValue: (undefined === layout.minValue ? 0 : layout.minValue),
                        maxValue: (undefined === layout.maxValue ? (layout.minValue + 100) : layout.maxValue),
                        niceScale: (undefined === layout.niceScale ? true : layout.niceScale),
                        thresholdVisible: (undefined === layout.thresholdVisible ? false : layout.thresholdVisible),
                        thresholdRising: ((undefined === layout.thresholdRising || !layout.thresholdVisible) ? false : layout.thresholdRising),
                        threshold: ((undefined === layout.threshold || !layout.thresholdVisible || !layout.thresholdRising) ? (layout.maxValue - layout.minValue) / 2 + layout.minValue: layout.threshold),
                        titleString: ((undefined === layout.titleString || !layout.showgaugetitle) ? '' : layout.titleString),
                        unitString: ((undefined === layout.unitString || !layout.unitStringVisible) ? '' : layout.unitString),
                        frameDesign: ((layout.frameDesign === 'BLACK_METAL') ? steelseries.FrameDesign.BLACK_METAL
                            : (layout.frameDesign === 'METAL') ? steelseries.FrameDesign.METAL
                            : (layout.frameDesign === 'SHINY_METAL') ? steelseries.FrameDesign.SHINY_METAL
                            : (layout.frameDesign === 'BRASS') ? steelseries.FrameDesign.BRASS
                            : (layout.frameDesign === 'STEEL') ? steelseries.FrameDesign.STEEL
                            : (layout.frameDesign === 'CHROME') ? steelseries.FrameDesign.CHROME
                            : (layout.frameDesign === 'GOLD') ? steelseries.FrameDesign.GOLD
                            : (layout.frameDesign === 'ANTHRACITE') ? steelseries.FrameDesign.ANTHRACITE
                            : (layout.frameDesign === 'TILTED_GRAY') ? steelseries.FrameDesign.TILTED_GRAY
                            : (layout.frameDesign === 'TILTED_BLACK') ? steelseries.FrameDesign.TILTED_BLACK
                            : (layout.frameDesign === 'GLOSSY_METAL') ? steelseries.FrameDesign.GLOSSY_METAL
                            : steelseries.FrameDesign.METAL),
                        frameVisible: (undefined === layout.frameVisible ? true : layout.frameVisible),
                        backgroundColor: ((layout.backgroundColor === 'DARK_GRAY') ? steelseries.BackgroundColor.DARK_GRAY
                            : (layout.backgroundColor === 'SATIN_GRAY') ? steelseries.BackgroundColor.SATIN_GRAY
                            : (layout.backgroundColor === 'LIGHT_GRAY') ? steelseries.BackgroundColor.LIGHT_GRAY
                            : (layout.backgroundColor === 'WHITE') ? steelseries.BackgroundColor.WHITE
                            : (layout.backgroundColor === 'BLACK') ? steelseries.BackgroundColor.BLACK
                            : (layout.backgroundColor === 'BEIGE') ? steelseries.BackgroundColor.BEIGE
                            : (layout.backgroundColor === 'BROWN') ? steelseries.BackgroundColor.BROWN
                            : (layout.backgroundColor === 'RED') ? steelseries.BackgroundColor.RED
                            : (layout.backgroundColor === 'GREEN') ? steelseries.BackgroundColor.GREEN
                            : (layout.backgroundColor === 'BLUE') ? steelseries.BackgroundColor.BLUE
                            : (layout.backgroundColor === 'ANTHRACITE') ? steelseries.BackgroundColor.ANTHRACITE
                            : (layout.backgroundColor === 'MUD') ? steelseries.BackgroundColor.MUD
                            : (layout.backgroundColor === 'PUNCHED_SHEET') ? steelseries.BackgroundColor.PUNCHED_SHEET
                            : (layout.backgroundColor === 'CARBON') ? steelseries.BackgroundColor.CARBON
                            : (layout.backgroundColor === 'STAINLESS') ? steelseries.BackgroundColor.STAINLESS
                            : (layout.backgroundColor === 'BRUSHED_METAL') ? steelseries.BackgroundColor.BRUSHED_METAL
                            : (layout.backgroundColor === 'BRUSHED_STAINLESS') ? steelseries.BackgroundColor.BRUSHED_STAINLESS
                            : (layout.backgroundColor === 'TURNED') ? steelseries.BackgroundColor.TURNED
                            : steelseries.BackgroundColor.DARK_GRAY),
                        backgroundVisible: (undefined === layout.backgroundVisible ? true : layout.backgroundVisible),
                        pointerType: ((layout.pointerType === 'TYPE1') ? steelseries.PointerType.TYPE1
                            : (layout.pointerType === 'TYPE2') ? steelseries.PointerType.TYPE2
                            : (layout.pointerType === 'TYPE3') ? steelseries.PointerType.TYPE3
                            : (layout.pointerType === 'TYPE4') ? steelseries.PointerType.TYPE4
                            : (layout.pointerType === 'TYPE5') ? steelseries.PointerType.TYPE5
                            : (layout.pointerType === 'TYPE6') ? steelseries.PointerType.TYPE6
                            : (layout.pointerType === 'TYPE7') ? steelseries.PointerType.TYPE7
                            : (layout.pointerType === 'TYPE8') ? steelseries.PointerType.TYPE8
                            : (layout.pointerType === 'TYPE9') ? steelseries.PointerType.TYPE9
                            : (layout.pointerType === 'TYPE10') ? steelseries.PointerType.TYPE10
                            : (layout.pointerType === 'TYPE11') ? steelseries.PointerType.TYPE11
                            : (layout.pointerType === 'TYPE12') ? steelseries.PointerType.TYPE12
                            : (layout.pointerType === 'TYPE13') ? steelseries.PointerType.TYPE13
                            : (layout.pointerType === 'TYPE14') ? steelseries.PointerType.TYPE14
                            : (layout.pointerType === 'TYPE15') ? steelseries.PointerType.TYPE15
                            : (layout.pointerType === 'TYPE16') ? steelseries.PointerType.TYPE16
                            : steelseries.PointerType.TYPE1),
                        pointerColor: ((layout.pointerColor === 'RED') ? steelseries.ColorDef.RED
                            : (layout.pointerColor === 'GREEN') ? steelseries.ColorDef.GREEN
                            : (layout.pointerColor === 'BLUE') ? steelseries.ColorDef.BLUE
                            : (layout.pointerColor === 'ORANGE') ? steelseries.ColorDef.ORANGE
                            : (layout.pointerColor === 'YELLOW') ? steelseries.ColorDef.YELLOW
                            : (layout.pointerColor === 'CYAN') ? steelseries.ColorDef.CYAN
                            : (layout.pointerColor === 'MAGENTA') ? steelseries.ColorDef.MAGENTA
                            : (layout.pointerColor === 'WHITE') ? steelseries.ColorDef.WHITE
                            : (layout.pointerColor === 'GRAY') ? steelseries.ColorDef.GRAY
                            : (layout.pointerColor === 'BLACK') ? steelseries.ColorDef.BLACK
                            : (layout.pointerColor === 'RAITH') ? steelseries.ColorDef.RAITH
                            : (layout.pointerColor === 'GREEN_LCD') ? steelseries.ColorDef.GREEN_LCD
                            : (layout.pointerColor === 'JUG_GREEN') ? steelseries.ColorDef.JUG_GREEN
                            : steelseries.ColorDef.RED),
                        knobType: ((layout.knobType === 'STANDARD_KNOB') ? steelseries.KnobType.STANDARD_KNOB
                            : (layout.knobType === 'METAL_KNOB') ? steelseries.KnobType.METAL_KNOB
                            : steelseries.KnobType.STANDARD_KNOB),
                        knobStyle: ((layout.knobStyle === 'SILVER') ? steelseries.KnobStyle.SILVER
                            : (layout.knobStyle === 'BLACK') ? steelseries.KnobStyle.BLACK
                            : (layout.knobStyle === 'BRASS') ? steelseries.KnobStyle.BRASS
                            : steelseries.KnobStyle.SILVER),
                        lcdColor: ((layout.lcdColor === 'BEIGE') ? steelseries.LcdColor.BEIGE
                            : (layout.lcdColor === 'BLUE') ? steelseries.LcdColor.BLUE
                            : (layout.lcdColor === 'ORANGE') ? steelseries.LcdColor.ORANGE
                            : (layout.lcdColor === 'RED') ? steelseries.LcdColor.RED
                            : (layout.lcdColor === 'YELLOW') ? steelseries.LcdColor.YELLOW
                            : (layout.lcdColor === 'WHITE') ? steelseries.LcdColor.WHITE
                            : (layout.lcdColor === 'GRAY') ? steelseries.LcdColor.GRAY
                            : (layout.lcdColor === 'BLACK') ? steelseries.LcdColor.BLACK
                            : (layout.lcdColor === 'GREEN') ? steelseries.LcdColor.GREEN
                            : (layout.lcdColor === 'BLUE2') ? steelseries.LcdColor.BLUE2
                            : (layout.lcdColor === 'BLUE_BLACK') ? steelseries.LcdColor.BLUE_BLACK
                            : (layout.lcdColor === 'BLUE_DARKBLUE') ? steelseries.LcdColor.BLUE_DARKBLUE
                            : (layout.lcdColor === 'BLUE_GRAY') ? steelseries.LcdColor.BLUE_GRAY
                            : (layout.lcdColor === 'STANDARD') ? steelseries.LcdColor.STANDARD
                            : (layout.lcdColor === 'STANDARD_GREEN') ? steelseries.LcdColor.STANDARD_GREEN
                            : (layout.lcdColor === 'BLUE_BLUE') ? steelseries.LcdColor.BLUE_BLUE
                            : (layout.lcdColor === 'RED_DARKRED') ? steelseries.LcdColor.RED_DARKRED
                            : (layout.lcdColor === 'DARKBLUE') ? steelseries.LcdColor.DARKBLUE
                            : (layout.lcdColor === 'LILA') ? steelseries.LcdColor.LILA
                            : (layout.lcdColor === 'BLACKRED') ? steelseries.LcdColor.BLACKRED
                            : (layout.lcdColor === 'DARKGREEN') ? steelseries.LcdColor.DARKGREEN
                            : (layout.lcdColor === 'AMBER') ? steelseries.LcdColor.AMBER
                            : (layout.lcdColor === 'LIGHTBLUE') ? steelseries.LcdColor.LIGHTBLUE
                            : steelseries.LcdColor.STANDARD),
                        lcdVisible: ((undefined === layout.lcdVisible) ? true : layout.lcdVisible),
                        lcdDecimals: ((undefined === layout.lcdDecimals) ? 2 : layout.lcdDecimals),
                        ledColor: ((layout.ledColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.ledColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.ledColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.ledColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.ledColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.ledColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.ledColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.LedColor.RED_LED),
                        ledVisible: (undefined === layout.ledVisible ? true : layout.ledVisible),
                        userLedColor: ((layout.userLedColor === 'RED') ? steelseries.LedColor.RED_LED
                            : (layout.userLedColor === 'GREEN') ? steelseries.LedColor.GREEN_LED
                            : (layout.userLedColor === 'BLUE') ? steelseries.LedColor.BLUE_LED
                            : (layout.userLedColor === 'ORANGE') ? steelseries.LedColor.ORANGE_LED
                            : (layout.userLedColor === 'YELLOW') ? steelseries.LedColor.YELLOW_LED
                            : (layout.userLedColor === 'CYAN') ? steelseries.LedColor.CYAN_LED
                            : (layout.userLedColor === 'MAGENTA') ? steelseries.LedColor.MAGENTA_LED
                            : steelseries.userLedColor.RED_LED),
                        userLedVisible: (undefined === layout.userLedVisible ? false : layout.userLedVisible),
                        minMeasuredValueVisible: (undefined === layout.minMeasuredValueVisible ? false : layout.minMeasuredValueVisible),
                        maxMeasuredValueVisible: (undefined === layout.maxMeasuredValueVisible ? false : layout.maxMeasuredValueVisible),
                        foregroundType: ((layout.foregroundType === 'TYPE1') ? steelseries.ForegroundType.TYPE1
                            : (layout.foregroundType === 'TYPE2') ? steelseries.ForegroundType.TYPE2
                            : (layout.foregroundType === 'TYPE3') ? steelseries.ForegroundType.TYPE3
                            : (layout.foregroundType === 'TYPE4') ? steelseries.ForegroundType.TYPE4
                            : (layout.foregroundType === 'TYPE5') ? steelseries.ForegroundType.TYPE5
                            : steelseries.ForegroundType.TYPE1),
                        foregroundVisible: (undefined === layout.foregroundVisible ? true : layout.foregroundVisible),
                        size: ($element.height() <= $element.width() ? $element.height() : $element.width())
                    };

                    gauge = new steelseries.Radial(SteelSeries_id, gaugeParams);
                }

            });

        }

    }

    // ---------------------------------------------------------------------------------------
    // All Together
    // ---------------------------------------------------------------------------------------

    return {
        // Properties and Initial Properties
        definition: props,
        initialProperties: initProps,
        snapshot: {canTakeSnapshot: false},

        // When Resize Element
        resize: function ($element, layout) {
            render($element, layout);
        },

        // Paint Element
        paint: function ($element, layout) {
            render($element, layout);
        }
    };

});